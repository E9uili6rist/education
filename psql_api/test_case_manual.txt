Заголовок: Тестирование API по управлению БД .
Глобальное предусловие: 1) Открыт Docker Desktop и запущен Docker Compose "py_to_psql" с контейнерами Postgres и server.py ;
                        2) Перед началом тестов убедиться, что таблица пуста, очистить ее в случае необходимости .


----------------------Тест 1----------------------
Описание: Проверка получения данных из пустой таблицы .

Порядок действий: 1) Вызвать метод GET /data .

Ожидаемый результат: Пустой массив "[]" .


----------------------Тест 2----------------------
Описание: Проверка добавления данных в таблицу .

Порядок действий: 1) Вызвать метод POST /data с телом {"text": "test"} .

Ожидаемый результат: 1) Ответ "Data added successfully." ;
                     2) В БД появилась строка "1, test,	YYYY-MM-DD HH:MM:SS.SSS +0300" .


----------------------Тест 3----------------------
Описание: Проверка получения данных из таблицы после их добавления .

Порядок действий: 1) Вызвать метод GET /data .

Ожидаемый результат: Ответ "1, test, YYYY-MM-DD HH:MM:SS.SSS +0300" .


----------------------Тест 4----------------------
Описание: Проверка обновления данных по идентификатору (id) строки .

Порядок действий: 1) Вызвать метод PUT /data/1 с телом {"text": "newtest"} .

Ожидаемый результат: 1) Ответ "Data updated successfully." ;
                     2) В БД по!!!!!!!явилась строка "1, newtest,	YYYY-MM-DD HH:MM:SS.SSS +0300" .


----------------------Тест 5----------------------
Описание: Проверка получения обновленных данных строки .

Порядок действий: 1) Вызвать метод GET /data/1 .

Ожидаемый результат: Ответ "1, newtest,	YYYY-MM-DD HH:MM:SS.SSS +0300" .


----------------------Тест 6----------------------
Описание: Проверка удаления данных по идентификатору / id строки .

Порядок действий: 1) Вызвать метод DELETE /data/1 .

Ожидаемый результат: Ответ "Data deleted successfully." .


----------------------Тест 7----------------------
Описание: Проверка получения данных после удаления по идентификатору .

Порядок действий: 1) Вызвать метод GET /data/1 .

Ожидаемый результат: Ответ "Data not found." .


----------------------Тест 8----------------------
Описание: Проверка удаления всех данных .

Порядок действий: 1) Вызвать метод DELETE /data .

Ожидаемый результат: Ответ "Table cleared and sequence reset." .


----------------------Тест 1----------------------
Описание: Проверка получения данных из таблицы после удаления всех данных .

Порядок действий: 1) Вызвать метод GET /data .

Ожидаемый результат: Пустой массив "[]" .


----------------------Тест 10----------------------
Описание: Проверка обработки некорректных запросов: отсутствие текста при добавлении .

Порядок действий: 1) Вызвать метод POST /data с телом {} .

Ожидаемый результат: Ответ "No text provided." .


----------------------Тест 11----------------------
Описание: Проверка обработки некорректных запросов: отсутствие текста при обновлении .

Порядок действий: 1) Вызвать метод PUT /data/1 с телом {} .

Ожидаемый результат: Ответ "No text provided." .


----------------------Тест 12----------------------
Описание: Проверка обработки некорректных запросов: некорректный идентификатор при получении .

Порядок действий: 1) Вызвать метод GET /data/99999 .

Ожидаемый результат: Ответ "Data not found." .


----------------------Тест 13----------------------
Описание: Проверка обработки некорректных запросов: некорректный идентификатор при обновлении .

Порядок действий: 1) Вызвать метод PUT /data/99999 с телом {"text": "newtest"} .

Ожидаемый результат: Ответ  ?????????????????? (исполняет успешно)


----------------------Тест 14----------------------
Описание: Проверка обработки некорректных запросов: некорректный идентификатор при удалении .

Порядок действий: 1) Вызвать метод DELETE /data/99999 .

Ожидаемый результат: Ответ  ?????????????????? (исполняет успешно)


----------------------Тест 15----------------------
Описание: Проверка возможности добавления строки длиной 100 символов .

Порядок действий: 1) Вызвать метод POST /data с телом {"text": xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx} .

Ожидаемый результат: 1) Ответ "Data added successfully." ;
                     2) В БД появилась строка "1, xxxxxxxxxx...xxxxxxxxxx, YYYY-MM-DD HH:MM:SS.SSS +0300" (длина текстовой части 100 символов) .

----------------------Тест 16----------------------
Описание: Проверка возможности добавления строки с любыми символами .

Порядок действий: 1) Вызвать метод POST /data с телом {"text": ~!@#$%^&*()_+[]{}|\:;"'<>?,./-=0123456789QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnmЁЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮёйцукенгшщзхъфывапролджэячсмитьбю} .

Ожидаемый результат: 1) Ответ "Data added successfully." ;
                     2) В БД появилась строка "1, ~!@#$...итьбю, YYYY-MM-DD HH:MM:SS.SSS +0300" (текстовая часть содержит все символы клавиатуры, включая большие и маленькие буквы английского и русского алфавита) .







